DROP TABLE USER_ROLES IF EXISTS;
DROP VIEW VOTERESULT IF EXISTS;
DROP TABLE VOTES IF EXISTS;
DROP TABLE MENUS IF EXISTS;
DROP TABLE USERS IF EXISTS;
DROP TABLE RESTAURANTS IF EXISTS;
DROP SEQUENCE GLOBAL_SEQ IF EXISTS;

CREATE SEQUENCE GLOBAL_SEQ AS INTEGER START WITH 100000;

CREATE TABLE USERS
(
    id         INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
    name       VARCHAR(255)            NOT NULL,
    email      VARCHAR(255)            NOT NULL,
    password   VARCHAR(255)            NOT NULL,
    registered TIMESTAMP DEFAULT now() NOT NULL,
    enabled    BOOLEAN   DEFAULT TRUE  NOT NULL
);
CREATE
UNIQUE INDEX users_unique_email_idx ON users (email);

CREATE TABLE USER_ROLES
(
    user_id INTEGER NOT NULL,
    role    VARCHAR(255),
    CONSTRAINT user_roles_idx UNIQUE (user_id, role),
    FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE
);

CREATE TABLE RESTAURANTS
(
    id      INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
    name    VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);
CREATE
UNIQUE INDEX restaurants_unique_name_address_idx ON RESTAURANTS (name, address);

CREATE TABLE MENUS
(
    id            INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
    restaurant_id INTEGER            NOT NULL,
    date          DATE DEFAULT now() NOT NULL,
    description   VARCHAR(255)       NOT NULL,
    price         BIGINT             NOT NULL,
    CONSTRAINT menus_unique_restaurant_date_description_idx UNIQUE (restaurant_id, date, description),
    FOREIGN KEY (restaurant_id) REFERENCES restaurants (id) ON DELETE CASCADE
);

CREATE TABLE VOTES
(
    id            INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
    date          DATE DEFAULT now() NOT NULL,
    user_id       INTEGER            NOT NULL,
    restaurant_id INTEGER            NOT NULL,
    FOREIGN KEY (restaurant_id) REFERENCES restaurants (id) ON DELETE CASCADE,
    FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE
);
CREATE
UNIQUE INDEX votes_unique_user_date_idx ON VOTES (user_id, date);

CREATE VIEW voteresult
AS
select row_number() over () id, restaurant_id,
        date, sum (vt) voteCount, sum (mn) menuCount
        from (select r.name, r.id restaurant_id, v.date, 1 vt, 0 mn
        from RESTAURANTS r
        join votes v on v.restaurant_id = r.id
        union all
        select r.name, r.id restaurant_id, m.date, 0 vt, 1 mn
        from menus m
        join RESTAURANTS r on r.id = m.restaurant_id
        ) as voteresult
        group by name, restaurant_id, date
        order by restaurant_id, date, voteCount, menuCount;
